export interface MasterValue { min:number; max:number; baseDie:string; modifier:number; powerRange:number; maxLift:string; example:string; throwRange:number | null; maxPushDrag:string; topMPH:string; }

export const masterValues: MasterValue[] = [
  {
    "min": 1,
    "max": 1,
    "baseDie": "",
    "modifier": -5,
    "powerRange": 0,
    "maxLift": "10 lbs.",
    "example": "-",
    "throwRange": null,
    "maxPushDrag": "-",
    "topMPH": "-"
  },
  {
    "min": 2,
    "max": 3,
    "baseDie": "",
    "modifier": -4,
    "powerRange": 1,
    "maxLift": "50 lbs.",
    "example": "-",
    "throwRange": 0,
    "maxPushDrag": "100 lb.",
    "topMPH": "-"
  },
  {
    "min": 4,
    "max": 5,
    "baseDie": "d4",
    "modifier": -3,
    "powerRange": 2,
    "maxLift": "79 lbs.",
    "example": "",
    "throwRange": 1,
    "maxPushDrag": "150 lbs.",
    "topMPH": "-"
  },
  {
    "min": 6,
    "max": 7,
    "baseDie": "d4",
    "modifier": -2,
    "powerRange": 3,
    "maxLift": "100 lbs.",
    "example": "",
    "throwRange": 1,
    "maxPushDrag": "200 lbs.",
    "topMPH": "-"
  },
  {
    "min": 8,
    "max": 9,
    "baseDie": "d4",
    "modifier": -1,
    "powerRange": 4,
    "maxLift": "150 lbs.",
    "example": "",
    "throwRange": 2,
    "maxPushDrag": "300 lbs.",
    "topMPH": "-"
  },
  {
    "min": 10,
    "max": 11,
    "baseDie": "d6",
    "modifier": 0,
    "powerRange": 5,
    "maxLift": "200 lbs.",
    "example": "Average Human",
    "throwRange": 3,
    "maxPushDrag": "400 lbs.",
    "topMPH": "-"
  },
  {
    "min": 12,
    "max": 13,
    "baseDie": "d6",
    "modifier": 1,
    "powerRange": 6,
    "maxLift": "250 lbs.",
    "example": "",
    "throwRange": 4,
    "maxPushDrag": "500 lbs.",
    "topMPH": "20"
  },
  {
    "min": 14,
    "max": 15,
    "baseDie": "d8",
    "modifier": 2,
    "powerRange": 7,
    "maxLift": "300 lbs.",
    "example": "Male Lion",
    "throwRange": 5,
    "maxPushDrag": "600 lbs.",
    "topMPH": "30"
  },
  {
    "min": 16,
    "max": 17,
    "baseDie": "d8",
    "modifier": 3,
    "powerRange": 8,
    "maxLift": "400 lbs.",
    "example": "",
    "throwRange": 6,
    "maxPushDrag": "800 lbs.",
    "topMPH": "40"
  },
  {
    "min": 18,
    "max": 19,
    "baseDie": "d10",
    "modifier": 4,
    "powerRange": 9,
    "maxLift": "500 lbs.",
    "example": "",
    "throwRange": 7,
    "maxPushDrag": "1000 lbs.",
    "topMPH": "45"
  },
  {
    "min": 20,
    "max": 21,
    "baseDie": "d10",
    "modifier": 5,
    "powerRange": 10,
    "maxLift": "600 lbs.",
    "example": "Motorcycle",
    "throwRange": 7,
    "maxPushDrag": "1200 lbs.",
    "topMPH": "50"
  },
  {
    "min": 22,
    "max": 23,
    "baseDie": "d12",
    "modifier": 6,
    "powerRange": 11,
    "maxLift": "700 lbs.",
    "example": "ATV",
    "throwRange": 8,
    "maxPushDrag": "1400 lbs.",
    "topMPH": "60"
  },
  {
    "min": 24,
    "max": 25,
    "baseDie": "d12",
    "modifier": 7,
    "powerRange": 12,
    "maxLift": "800 lbs.",
    "example": "",
    "throwRange": 8,
    "maxPushDrag": "1600 lbs.",
    "topMPH": "70"
  },
  {
    "min": 26,
    "max": 27,
    "baseDie": "2d6",
    "modifier": 8,
    "powerRange": 13,
    "maxLift": "900 lbs.",
    "example": "",
    "throwRange": 9,
    "maxPushDrag": "1800 lbs.",
    "topMPH": "80"
  },
  {
    "min": 28,
    "max": 29,
    "baseDie": "2d6",
    "modifier": 9,
    "powerRange": 14,
    "maxLift": "1 ton.",
    "example": "Average Car",
    "throwRange": 9,
    "maxPushDrag": "2 ton.",
    "topMPH": "90"
  },
  {
    "min": 30,
    "max": 31,
    "baseDie": "2d8",
    "modifier": 10,
    "powerRange": 15,
    "maxLift": "2 tons.",
    "example": "Large Truck",
    "throwRange": 10,
    "maxPushDrag": "4 tons.",
    "topMPH": "100"
  },
  {
    "min": 32,
    "max": 33,
    "baseDie": "2d8",
    "modifier": 11,
    "powerRange": 16,
    "maxLift": "4 tons.",
    "example": "Subway Car",
    "throwRange": 10,
    "maxPushDrag": "6 tons.",
    "topMPH": "200"
  },
  {
    "min": 34,
    "max": 35,
    "baseDie": "2d10",
    "modifier": 12,
    "powerRange": 17,
    "maxLift": "6 tons.",
    "example": "School Bus",
    "throwRange": 12,
    "maxPushDrag": "12 tons.",
    "topMPH": "250"
  },
  {
    "min": 36,
    "max": 37,
    "baseDie": "2d10",
    "modifier": 13,
    "powerRange": 18,
    "maxLift": "8 tons.",
    "example": "Semi-Truck",
    "throwRange": 13,
    "maxPushDrag": "16 tons.",
    "topMPH": "350"
  },
  {
    "min": 38,
    "max": 39,
    "baseDie": "2d12",
    "modifier": 14,
    "powerRange": 19,
    "maxLift": "10 tons.",
    "example": "Light Military Tank",
    "throwRange": 14,
    "maxPushDrag": "20 tons.",
    "topMPH": "450"
  },
  {
    "min": 40,
    "max": 41,
    "baseDie": "2d12",
    "modifier": 15,
    "powerRange": 20,
    "maxLift": "13 tons.",
    "example": "",
    "throwRange": 15,
    "maxPushDrag": "26 tons.",
    "topMPH": "550"
  },
  {
    "min": 42,
    "max": 43,
    "baseDie": "4d6",
    "modifier": 16,
    "powerRange": 21,
    "maxLift": "16 tons.",
    "example": "Armored Personal Carrier",
    "throwRange": 16,
    "maxPushDrag": "32 tons.",
    "topMPH": "650"
  },
  {
    "min": 44,
    "max": 45,
    "baseDie": "4d6",
    "modifier": 17,
    "powerRange": 22,
    "maxLift": "32 tons.",
    "example": "",
    "throwRange": 17,
    "maxPushDrag": "62 tons.",
    "topMPH": "750"
  },
  {
    "min": 46,
    "max": 47,
    "baseDie": "4d8",
    "modifier": 18,
    "powerRange": 23,
    "maxLift": "64 tons.",
    "example": "Heavy Military Tank",
    "throwRange": 18,
    "maxPushDrag": "128 tons.",
    "topMPH": "Mach 1"
  },
  {
    "min": 48,
    "max": 49,
    "baseDie": "4d8",
    "modifier": 19,
    "powerRange": 25,
    "maxLift": "128 tons.",
    "example": "Small Coastguard Cutter",
    "throwRange": 19,
    "maxPushDrag": "256 tons.",
    "topMPH": "Mach 1.5"
  },
  {
    "min": 50,
    "max": 50,
    "baseDie": "4d10",
    "modifier": 20,
    "powerRange": 26,
    "maxLift": "256 tons.",
    "example": "Locomotive",
    "throwRange": 20,
    "maxPushDrag": "512 tons.",
    "topMPH": "Mach 2"
  }
];

export function getMasterValue(score:number): MasterValue {
 return masterValues.find(v=>score>=v.min && score<=v.max) || masterValues[masterValues.length-1];
}
